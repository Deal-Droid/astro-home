---
import Container from '@components/container.astro';
import Link from '@components/ui/link.astro';
import Dropdown from './dropdown.astro';
import { StickyHeader, Astronav, MenuItems, MenuIcon } from 'astro-navbar';
import { Image } from 'astro:assets';
import logoImage from '../../assets/logo.svg';
import { config } from '../../config.ts';

import {
  useTranslations,
  usePageTranslations,
  useTranslatedPath,
} from '../../i18n/utils';

import type { UILanguages } from '../../i18n/ui';
import { Icon } from 'astro-icon/components';

const page_ui: UILanguages = {
  en: {
    'nav.login': 'Login',
    'nav.cta': 'Try for Free',
  },
  th: {
    'nav.login': 'เข้าสู่ระบบ',
    'nav.cta': 'ทดสอบระบบ ฟรี',
  },
} as const;

const lang = Astro.currentLocale || 'en';
const t = useTranslations(lang);
const p = usePageTranslations(lang, page_ui);

// const menuitems = [
//   {
//     title: 'Pages',
//     path: '#',
//     children: [
//       { title: 'Features', path: '/features' },
//       { title: 'Integrations', path: '/integrations' },
//       {
//         title: 'Blog Details',
//         path: '/blog//typography-example',
//       },
//       { title: '404 Page', path: '/404' },
//     ],
//   },
//   {
//     title: 'Contact',
//     path: '/contact',
//   },
// ];

interface MenuItem {
  title: string;
  path: string;
  children?: MenuItem[];
  isExternal?: boolean;
}

const translatedPath = useTranslatedPath(lang);

const menuitems: MenuItem[] = [
  {
    title: t('general.home'),
    path: translatedPath('/'),
  },
  // {
  //   title: t('general.blog'),
  //   path: '/blog',
  // },
  {
    title: t('general.document'),
    path: 'http://doc.dealdroid.net',
    isExternal: true,
  },
  {
    title: t('general.contact'),
    path: translatedPath('/contact'),
  },
];
---

<StickyHeader
  class="sticky top-0 border-b z-20 transition-all"
  scrollY={50}
  defaultClass="py-5 border-transparent"
  activeClass="py-2 bg-white/80 border-gray-200 backdrop-blur-lg">
  <Container>
    <div
      class="flex flex-col lg:flex-row justify-between items-center relative z-10"
      transition:animate="none">
      <Astronav>
        <div class="flex w-full lg:w-auto items-center justify-between">
          <a
            href={translatedPath('/')}
            class="text-lg flex items-center transition focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full px-2 -ml-2">
            <Image
              src={logoImage}
              alt="Dealdroid logo"
              class="w-8 h-8 mr-1"
              loading="eager"
              fetchpriority="high"
            />
            <span class="font-bold text-indigo-600">Deal</span><span
              class="text-slate-600">Droid</span
            >
            <span
              class="hidden uppercase mt-0.5 leading-none text-[10px] ml-1 font-bold bg-gray-200 text-slate-700 px-2 py-1 rounded-md"
              >PRO</span
            >
          </a>
          <div class="block lg:hidden">
            <MenuIcon class="w-4 h-4 text-gray-800" />
          </div>
        </div>
        <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
          <ul class="flex flex-col lg:flex-row lg:gap-3">
            {
              menuitems.map((item, index) => (
                <>
                  {item.children && (
                    <Dropdown
                      title={item.title}
                      children={item.children}
                      lastItem={index === menuitems.length - 1}
                    />
                  )}

                  {!item.children && (
                    <li>
                      <a
                        href={item.path}
                        class={`flex items-center lg:px-3 py-2 text-sm text-gray-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 transition focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full ${
                          Astro.url.pathname === item.path
                            ? 'text-indigo-600 font-medium'
                            : 'text-gray-600'
                        }`}>
                        {item.title}
                        {item.isExternal && (
                          <Icon
                            class="ml-1 w-4 h-4 inline-block"
                            name="fluent:open-12-regular"
                            size="24"
                          />
                        )}
                      </a>
                    </li>
                  )}
                </>
              ))
            }
          </ul>
          <div class="lg:hidden flex items-center mt-3 gap-4">
            <Link
              href="http://app.dealdroid.net"
              style="muted"
              block
              size="md"
              >{p('nav.login')}</Link
            >
            <Link
              href={config.urls.register}
              size="md"
              block
              >{p('nav.cta')}</Link
            >
          </div>
        </MenuItems>
      </Astronav>
      <div>
        <div class="hidden lg:flex items-center gap-4">
          <a
            href="https://app.dealdroid.net"
            class="text-sm px-2 py-1 transition focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full"
            >{p('nav.login')}</a
          >
          <Link
            href={config.urls.register}
            size="sm"
            class="inline-flex items-center group gap-px">
            <span>{p('nav.cta')}</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 20 20"
              fill="currentColor"
              class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
              <path
                fill-rule="evenodd"
                d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                clip-rule="evenodd"
              ></path>
            </svg>
          </Link>
        </div>
      </div>
    </div>
  </Container>
</StickyHeader>

<script>
  // Replace the existing script with this
  function updateHeaderOnScroll() {
    const header = document.querySelector('.astronav-sticky-header');
    if (header) {
      const scrollPos = window.scrollY;
      const addScrollY = Math.max(50, 100);
      const removeScrollY = Math.max(50 - 50, 50);

      if (scrollPos > addScrollY) {
        header.classList.remove('py-5', 'border-transparent');
        header.classList.add(
          'is-active',
          'py-2',
          'bg-white/80',
          'border-gray-200',
          'backdrop-blur-lg'
        );
        header.setAttribute('active', '');
      } else if (scrollPos < removeScrollY) {
        header.classList.remove(
          'is-active',
          'py-2',
          'bg-white/80',
          'border-gray-200',
          'backdrop-blur-lg'
        );
        header.classList.add('py-5', 'border-transparent');
        header.removeAttribute('active');
      }
    }
  }

  // Handle both initial load and subsequent navigation
  document.addEventListener('DOMContentLoaded', updateHeaderOnScroll);
  document.addEventListener('astro:page-load', updateHeaderOnScroll);

  // Handle scroll events
  window.addEventListener('scroll', () => {
    requestAnimationFrame(updateHeaderOnScroll);
  });
</script>
